plugins {
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${springDepManagement}"
    id 'com.bmuschko.docker-remote-api' version "$dockerPluginVersion" apply false
    id 'java'
}

group = 'com.ilkinmehdiyev'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_17

def javaProjects = [
//        project(':ms-user-management')
]

allprojects {
    def gitHash = 'git rev-parse --short HEAD'.execute().text.trim()
    version = "$projectVersion.$gitHash"

    repositories {
        mavenCentral()
    }

    apply plugin: 'java'
    apply plugin: 'com.bmuschko.docker-remote-api'
}

subprojects {
    apply plugin: 'pmd'
    apply plugin: 'checkstyle'

    dependencies {
        implementation "io.jsonwebtoken:jjwt-api:${jjwtVersion}"
        implementation "io.jsonwebtoken:jjwt-impl:${jjwtVersion}"
        implementation "io.jsonwebtoken:jjwt-jackson:${jjwtVersion}"
    }

    pmd {
        toolVersion = '6.21.0'
        ruleSets = []
        ignoreFailures = false
        ruleSetFiles = files("${rootProject.projectDir}/qa/pmd.xml")
    }

    checkstyle {
        toolVersion = '8.15'
        configFile = file("${rootProject.projectDir}/qa/checkstyle.xml")
        ignoreFailures = false
    }
}

//configure {
//    task dockerFile(type: Dockerfile, dependsOn: assemble) {
//        destFile.set(project.file('Dockerfile'))
//        from "alpine:$alpineVersion"
//        runCommand 'apk add --no-cache openjdk17'
//        copyFile "build/libs/${project.name}-${project.version}.jar", '/app/'
//        workingDir '/app/'
//        entryPoint 'java'
//        defaultCommand '-jar', "/app/${project.name}-${project.version}.jar"
//    }
//
//    task dockerBuild(type: DockerBuildImage, dependsOn: dockerFile) {
//        inputDir.set(file("$projectDir/."))
//        doLast {
//            println("creatig image: $dockerRepoUrl/ingb-${project.name}:$version")
//        }
//        images.add("$dockerRepoUrl/ingb-${project.name}:$version")
//    }
//
//    task dockerPush(type: DockerPushImage, dependsOn: dockerBuild) {
//        images.add("$dockerRepoUrl/ingb-${project.name}:$version")
//
//        registryCredentials.setUsername("$dockerHubUsername")
//        registryCredentials.setPassword("$dockerHubPassword")
//        registryCredentials.setEmail("$dockerHubEmail")
//    }
//}